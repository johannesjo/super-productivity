{
  "name": "superProductivity",
  "version": "7.10.1",
  "description": "Personal Task Management App to help you with your daily struggle with JIRA etc.",
  "main": "./electron/main.js",
  "author": "Johannes Millan <contact@super-productivity.com> (http://super-productivity.com)",
  "license": "MIT",
  "homepage": "http://super-productivity.com",
  "repository": {
    "type": "git",
    "url": "git://github.com/johannesjo/super-productivity.git"
  },
  "browserslist": {
    "production": [
      "> 0.5%",
      "last 2 versions",
      "not dead",
      "not IE 9-11",
      "not edge < 79",
      "not baidu < 10",
      "not ie_mob < 12",
      "not kaios < 5",
      "not op_mini all",
      "not op_mob < 60",
      "not bb < 14",
      "not and_uc < 13",
      "not and_qq < 2"
    ],
    "modern": [
      "supports es6-module"
    ]
  },
  "keywords": [
    "ToDo",
    "Task Management",
    "Jira",
    "GitHub",
    "Time Tracking"
  ],
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged"
    }
  },
  "scripts": {
    "ng": "ng",
    "start": "npm run electron:build && cross-env NODE_ENV=DEV electron .",
    "startFrontend": "ng serve",
    "serveProd": "ng serve --configuration production",
    "removeWOFF1": "node ./tools/remove-woff.js",
    "buildFrontend:prod:es6": "npm run prebuild && cross-env BROWSERSLIST_ENV='modern' node --max_old_space_size=4096 ./node_modules/@angular/cli/bin/ng build --configuration production && npm run removeWOFF1",
    "buildFrontend:prodWeb": "npm run prebuild && node --max_old_space_size=4096 ./node_modules/@angular/cli/bin/ng build  --configuration productionWeb",
    "buildFrontend:stage:es6": "npm run prebuild && cross-env BROWSERSLIST_ENV='modern' ng build --configuration stage && npm run removeWOFF1",
    "buildFrontend:stageWeb": "npm run prebuild && ng build --configuration stageWeb",
    "buildFrontend:prod:watch": "npm run prebuild && ng build --configuration production --watch",
    "buildAllElectron:prod": "npm run preCheck && npm run buildFrontend:prod:es6 && npm run electron:build",
    "buildAllElectron:stage": "npm run preCheck && npm run buildFrontend:stage:es6 && npm run electron:build",
    "buildAllElectron:noTests:prod": "npm run lint && npm run buildFrontend:prod:es6 && npm run electron:build",
    "build": "npm run buildAllElectron:noTests:prod",
    "test": "cross-env TZ='Europe/Berlin' ng test --watch=false",
    "test:watch": "cross-env TZ='Europe/Berlin' ng test --browsers ChromeHeadless",
    "lint": "ng lint",
    "prebuild": "node ./tools/git-version.js",
    "preCheck": "npm run lint && npm run test && npm run e2e",
    "e2e": "cross-env TZ='' DETECT_CHROMEDRIVER_VERSION=true SKIP_POST_INSTALL=true npm i -D chromedriver && tsc --project e2e/tsconfig.e2e.json && start-server-and-test 'ng serve --no-live-reload' 4200 'nightwatch -c ./e2e/nightwatch.conf.js --suiteRetries 1 --retries 0'",
    "e2e:tag": "killall chromedriver; rm -R ./out-tsc; tsc --project e2e/tsconfig.e2e.json && nightwatch -c ./e2e/nightwatch.conf.js --suiteRetries 0 --retries 0 --tag ",
    "electron": "NODE_ENV=PROD electron .",
    "electron:build": "tsc -p electron/tsconfig.electron.json",
    "electron:watch": "tsc -p electron/tsconfig.electron.json --watch",
    "electronBuilderOnly": "electron-builder",
    "empty": "echo 'EMPTY YEAH'",
    "pack": "electron-builder --dir",
    "localInstall": "sudo echo 'Starting local install' && rm -Rf ./dist/ && rm -Rf ./app-builds/ && npm run buildAllElectron:stage && electron-builder --linux deb && sudo dpkg -i app-builds/superProductivity*.deb",
    "localInstall:prod": "sudo echo 'Starting local install PROD' && rm -Rf ./dist/ && rm -Rf ./app-builds/ && npm run buildAllElectron:prod && electron-builder --linux deb && sudo dpkg -i app-builds/superProductivity*.deb",
    "localInstall:quick": "sudo echo 'Starting local install QUICK' && rm -Rf ./dist/ && rm -Rf ./app-builds/ && npm run buildFrontend:stage:es6 && npm run electron:build && electron-builder --linux deb && sudo dpkg -i app-builds/superProductivity*.deb",
    "localInstall:test:snap": "sudo echo 'Starting local install SNAP QUICK' && rm -Rf ./dist/ && rm -Rf ./app-builds/ && npm run buildFrontend:stage:es6 && npm run electron:build && electron-builder --linux snap && sudo snap install --dangerous app-builds/superProductivity*.snap",
    "localInstall:mac": "sudo echo 'Starting local install MAC. Don`t forget APPLEID & APPLEIDPASS !!' && npm run buildAllElectron:noTests:prod && sudo echo '' && electron-builder && sudo cp -rf app-builds/mac/Super\\ Productivity.app/ /Applications/superProductivity.app",
    "dist": "npm run buildAllElectron:prod && electron-builder",
    "dist:only": "electron-builder",
    "dist:linuxAndWin": "npm run buildAllElectron:prod && electron-builder --linux --win",
    "dist:win": "npm run buildAllElectron:noTests:prod && electron-builder --win",
    "dist:win:only": "electron-builder --win",
    "dist:win:appx": "npm run buildAllElectron:prod && electron-builder --win --config=build/electron-builder.appx.yaml",
    "dist:win:store": "git pull && npm run && copy electron-builder.win-store.yaml electron-builder.yaml && npm run dist:win && git checkout electron-builder.yaml || git checkout electron-builder.yaml",
    "dist:mac:dl": "cp tools/mac-profiles/dl.provisionprofile embedded.provisionprofile && electron-builder --mac",
    "dist:mac:mas": "cp tools/mac-profiles/mas.provisionprofile embedded.provisionprofile; electron-builder --mac mas --config=build/electron-builder.mas.yaml",
    "dist:mac:mas:buildOnly": "electron-builder --mac mas --config=build/electron-builder.mas.yaml",
    "dist:mac:mas:dev": "cp tools/mac-profiles/mas-dev.provisionprofile embedded.provisionprofile; electron-builder --mac mas-dev --config=build/electron-builder.mas-dev.yaml",
    "release": "npm run release.changelog && npm run dist",
    "release.changelog": "conventional-changelog -i CHANGELOG.md -s -p angular",
    "version": "npm run release.changelog && git add -A",
    "buildSchema": "cd tools/schematics && npm run build && cd ../../ && npm i file:./tools/schematics",
    "int": "node ./tools/extract-i18n-single.js",
    "int:watch": "node ./tools/extract-i18n-watch.js",
    "int:find": "ngx-translate-extract --input ./src --output ./src/assets/i18n/*.json  --sort --format namespaced-json --marker _",
    "int:clean": "ngx-translate-extract --input ./src --output ./src/assets/i18n/*.json --clean --sort --format namespaced-json --marker _",
    "postinstall": "cross-env-shell node ./tools/is-skip-postinstall.js --env.SKIP_POST_INSTALL=$SKIP_POST_INSTALL || ngcc --tsconfig src/tsconfig.app.json"
  },
  "publish": [
    {
      "provider": "github",
      "repo": "super-productivity",
      "owner": "johannesjo"
    }
  ],
  "dependencies": {
    "-": "0.0.1",
    "@electron/remote": "^2.0.1",
    "D": "^1.0.0",
    "electron-dl": "^3.3.0",
    "electron-localshortcut": "^3.2.1",
    "electron-log": "^4.4.1",
    "electron-window-state": "^5.0.3",
    "fs-extra": "^10.0.0",
    "node-fetch": "^2.6.6"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^13.1.4",
    "@angular-eslint/builder": "^13.0.1",
    "@angular-eslint/eslint-plugin": "^13.0.1",
    "@angular-eslint/eslint-plugin-template": "^13.0.1",
    "@angular-eslint/schematics": "13.0.1",
    "@angular-eslint/template-parser": "^13.0.1",
    "@angular/animations": "^13.1.1",
    "@angular/cdk": "^13.1.1",
    "@angular/cli": "^13.1.2",
    "@angular/common": "^13.1.1",
    "@angular/compiler": "^13.1.1",
    "@angular/compiler-cli": "^13.1.1",
    "@angular/core": "^13.1.1",
    "@angular/forms": "^13.1.1",
    "@angular/language-service": "^13.1.1",
    "@angular/material": "^13.1.1",
    "@angular/material-moment-adapter": "^13.1.1",
    "@angular/platform-browser": "^13.1.1",
    "@angular/platform-browser-dynamic": "^13.1.1",
    "@angular/platform-server": "^13.1.1",
    "@angular/router": "^13.1.1",
    "@angular/service-worker": "^13.1.1",
    "@biesbjerg/ngx-translate-extract": "^7.0.4",
    "@fontsource/roboto": "^4.5.1",
    "@nextcloud/cdav-library": "^1.0.0",
    "@ngrx/data": "^13.0.2",
    "@ngrx/effects": "^13.0.2",
    "@ngrx/entity": "^13.0.2",
    "@ngrx/schematics": "^13.0.2",
    "@ngrx/store": "13.0.2",
    "@ngrx/store-devtools": "^13.0.2",
    "@ngx-formly/core": "5.10.31",
    "@ngx-formly/material": "5.10.31",
    "@ngx-translate/core": "^14.0.0",
    "@ngx-translate/http-loader": "^7.0.0",
    "@schematics/angular": "^13.1.2",
    "@types/file-saver": "^2.0.5",
    "@types/hammerjs": "^2.0.39",
    "@types/jasmine": "^3.10.2",
    "@types/jasminewd2": "~2.0.9",
    "@types/lz-string": "^1.3.34",
    "@types/moment-duration-format": "^2.2.2",
    "@types/nightwatch": "^1.3.3",
    "@types/node": "14",
    "@types/node-fetch": "^3.0.3",
    "@types/object-path": "^0.11.1",
    "@typescript-eslint/eslint-plugin": "5.8.1",
    "@typescript-eslint/parser": "5.5.0",
    "angular-material-css-vars": "^3.0.0",
    "angular2-promise-buttons": "^5.0.2",
    "axios": "^0.21.4",
    "chart.js": "^2.8.0",
    "chromedriver": "^98.0.0",
    "clipboard": "^2.0.8",
    "codelyzer": "^6.0.2",
    "conventional-changelog-cli": "^2.0.21",
    "cross-env": "^7.0.3",
    "detect-it": "^4.0.1",
    "electron": "^14.1.1",
    "electron-builder": "22.14.5",
    "electron-builder-notarize": "^1.2.0",
    "electron-notarize": "^1.0.0",
    "eslint": "^8.3.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.25.3",
    "eslint-plugin-jsdoc": "37.1.0",
    "eslint-plugin-prefer-arrow": "1.2.3",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-unused-imports": "^1.1.5",
    "file-saver": "^2.0.2",
    "glob": "^7.1.7",
    "hammerjs": "^2.0.8",
    "helpful-decorators": "^2.1.0",
    "husky": "^4.2.5",
    "ical.js": "^1.5.0",
    "idb": "^6.1.4",
    "jasmine-core": "^4.0.0",
    "jasmine-marbles": "^0.8.4",
    "jasmine-spec-reporter": "~7.0.0",
    "jira2md": "git+https://github.com/johannesjo/J2M.git",
    "jo": "file:./tools/schematics",
    "karma": "~6.3.14",
    "karma-chrome-launcher": "~3.1.0",
    "karma-cli": "^2.0.0",
    "karma-coverage-istanbul-reporter": "~3.0.2",
    "karma-jasmine": "~4.0.1",
    "karma-jasmine-html-reporter": "^1.6.0",
    "lz-string": "^1.4.4",
    "moment": "2.29.1",
    "moment-duration-format": "^2.2.2",
    "nanoid": "^3.3.1",
    "new-github-issue-url": "^0.2.1",
    "ng2-charts": "^2.3.0",
    "ng2-charts-schematics": "^0.1.7",
    "ng2-dragula": "^2.1.1",
    "ngx-date-time-picker-schedule": "^9.4.16",
    "ngx-markdown": "^12.0.1",
    "nightwatch": "^1.7.11",
    "object-path": "^0.11.8",
    "p-throttle": "^3.1.0",
    "prettier": "^2.4.1",
    "pretty-quick": "^3.1.3",
    "query-string": "^7.0.0",
    "rxjs": "^6.6.7",
    "stacktrace-js": "^2.0.1",
    "start-server-and-test": "^1.14.0",
    "ts-node": "~10.2.1",
    "tslib": "^2.3.1",
    "typescript": "~4.4.4",
    "utils-decorators": "^1.10.4",
    "webdav": "~4.3.0",
    "zone.js": "~0.11.4"
  },
  "resolutions": {
    "sass": "1.32.6"
  }
}
