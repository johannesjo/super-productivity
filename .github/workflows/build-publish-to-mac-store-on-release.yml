name: Mac Store Release on Release
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs: null

jobs:
  mac-store-release:
    runs-on: macos-latest

    if: '!github.event.release.prerelease'

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

      - name: Install Yarn Packages
        run: yarn install

      - run: 'echo "$PROVISION_PROFILE" | base64 --decode > embedded.provisionprofile'
        shell: bash
        env:
          PROVISION_PROFILE: ${{secrets.mas_provision_profile}}

      - name: Lint
        run: yarn lint

      - name: Test Unit
        run: yarn test

      #      - name: Test E2E
      #        run: yarn e2e

      - name: Build Frontend & Electron
        run: yarn build

      - uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.mac_certs }}
          p12-password: ${{ secrets.mac_certs_password }}

      - name: Build Electron app
        run: yarn dist:mac:mas:buildOnly

      - name: Validate App
        run: ls app-builds; ls app-builds/mas; xcrun altool --validate-app -f app-builds/mas/Super*.pkg -u ${{secrets.APPLEID}} -p ${{secrets.APPLEIDPASS}}
        env:
          APPLEID: ${{secrets.APPLEID}}
          APPLEIDPASS: ${{secrets.APPLEIDPASS}}

      - name: Push to Store
        run: xcrun altool --upload-app -f app-builds/mas/Super*.pkg -u ${{secrets.APPLEID}} -p ${{secrets.APPLEIDPASS}}
        env:
          APPLEID: ${{secrets.APPLEID}}
          APPLEIDPASS: ${{secrets.APPLEIDPASS}}
